Libguestfs is a library for accessing and modifying guest disk images.
Amongst the things this is good for: making batch configuration
changes to guests, getting disk used/free statistics (see also:
virt-df), migrating between virtualization systems (see also:
virt-p2v), performing partial backups, performing partial guest
clones, cloning guests and changing registry/UUID/hostname info, and
much else besides.

Libguestfs uses Linux kernel and qemu code, and can access any type of
guest filesystem that Linux and qemu can, including but not limited
to: ext2/3/4, btrfs, FAT and NTFS, LVM, many different disk partition
schemes, qcow, qcow2, vmdk.

Libguestfs provides ways to enumerate guest storage (eg. partitions,
LVs, what filesystem is in each LV, etc.).  It can also run commands
in the context of the guest.  Also you can access filesystems over FTP.

Libguestfs is a library that can be linked with C and C++ management
programs (or management programs written in OCaml, Perl, Python or Ruby).
You can also use it from shell scripts or the command line.

Libguestfs was written by Richard W.M. Jones (rjones@redhat.com).
For discussion please use the fedora-virt mailing list:

  https://www.redhat.com/mailman/listinfo/fedora-virt


Requirements
----------------------------------------------------------------------

- recent QEMU with vmchannel support

- febootstrap >= 1.5

- XDR, rpcgen

- Augeas (http://augeas.net/)

- perldoc (pod2man, pod2text) to generate the manual pages and
other documentation.

- (Optional) Readline to have nicer command-line editing in guestfish.

- (Optional) OCaml if you want to rebuild the generated files, and
also to build the OCaml bindings

- (Optional) local Fedora mirror

- (Optional) Perl if you want to build the perl bindings

- (Optional) Python if you want to build the python bindings

- (Optional) Ruby, rake if you want to build the ruby bindings

- (Optional) Java, JNI, jpackage-utils if you want to build the java
bindings

Running ./configure will check you have all the requirements installed
on your machine.


Building
----------------------------------------------------------------------

Then make the daemon, library and root filesystem:

  ./configure [--with-mirror=URI]
  make

Use the optional --with-mirror parameter to specify the URI of a local
Fedora mirror.  See the discussion of the MIRROR parameter in the
febootstrap(8) manpage.

Finally run the tests:

  make check

If everything works, you can install the library and tools by running
these commands as root:

  make install


Notes on cross-architecture support
----------------------------------------------------------------------

At the moment we basically don't support cross-architecture or
32-on-64.  This limits what is possible for some guests.  Filesystem
operations and FTP export will work fine, but running commands in
guests may not be possible.

To enable this requires work for cross-architecture and 32-on-64
support in febootstrap, fakeroot and fakechroot.

The daemon/ directory contains its own configure script.  This is so
that in future we will be able to cross-compile the daemon.


Mirroring tip
----------------------------------------------------------------------

Having a local Fedora mirror makes a massive difference to the time it
takes to build and rebuild initramfs images.

Failing that, use squid to cache yum downloads, but read this first:
https://lists.dulug.duke.edu/pipermail/yum/2006-August/009041.html
(In brief, because yum chooses random mirrors each time, squid doesn't
work very well with default yum configuration.  To get around this,
choose a Fedora mirror which is close to you, set this with
'./configure --with-mirror=[...]', and then proxy the whole lot
through squid by setting http_proxy environment variable).

You will also need to substantially increase the squid configuration
limits:
http://fedoraproject.org/wiki/Using_Mock_to_test_package_builds#Using_Squid_to_Speed_Up_Mock_package_downloads

IntelligentMirror is another possibility, although I couldn't get it
to work for me.


Copyright and license information
----------------------------------------------------------------------

Copyright (C) 2009 Red Hat Inc.

The library is distributed under the LGPLv2+.  The programs are
distributed under the GPLv2+.  Please see the files COPYING and
COPYING.LIB for full license information.
